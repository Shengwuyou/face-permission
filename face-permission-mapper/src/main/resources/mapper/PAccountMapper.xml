<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.face.permission.mapper.dao.PAccountMapper">
  <resultMap id="BaseResultMap" type="com.face.permission.mapper.domain.PAccountDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="u_id" jdbcType="VARCHAR" property="uId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="grade" jdbcType="TINYINT" property="grade" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="roles" jdbcType="VARCHAR" property="roles" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ext_json" jdbcType="VARCHAR" property="extJson" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_id, login_name, password, grade, type, roles, status, create_time, update_time,
    ext_json
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_account
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="selectByUserId" resultType="com.face.permission.mapper.domain.PAccountDO">
      select
      <include refid="Base_Column_List"/>
      from p_account
      <where>
        <if test="password != null and password != ''">
          and password = #{password}
        </if>
        <if test="uId != null and uid != ''">
          and u_id = #{uId}
        </if>
        <if test="loginName != null and loginName != ''">
          and login_name = #{loginName}
        </if>
      </where>

    </select>




    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.face.permission.mapper.domain.PAccountDO">
    insert into p_account (id, u_id, login_name, 
      password, grade, type, 
      roles, status, create_time,
      update_time, ext_json)
    values (#{id,jdbcType=BIGINT}, #{uId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{grade,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{roles,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{extJson,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.face.permission.mapper.domain.PAccountDO">
    insert into p_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="roles != null">
        roles,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="extJson != null">
        ext_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="roles != null">
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extJson != null">
        #{extJson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.face.permission.mapper.domain.PAccountDO">
    update p_account
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="roles != null">
        roles = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extJson != null">
        ext_json = #{extJson,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.face.permission.mapper.domain.PAccountDO">
    update p_account
    set u_id = #{uId,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      roles = #{roles,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ext_json = #{extJson,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>